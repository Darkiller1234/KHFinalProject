<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace: 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="studyMapper">
  <resultMap type="Study" id="StudyResultSet">
  	<result column="STUDY_NO" property="studyNo"/>
  	<result column="MANAGER_NO" property="managerNo"/>
  	<result column="STUDY_NAME" property="studyName"/>
 	<result column="STUDY_INFO" property="studyInfo"/>
  	<result column="STUDY_IMG" property="studyImg"/>
  	<result column="STUDY_RECRUIT" property="studyRecruit"/>
  	<result column="MEMBER_COUNT" property="memberCount"/>
  	<result column="MANAGER_NAME" property="managerName"/>
  	<result column="MANAGER_INTRO" property="managerIntro"/>
  </resultMap>
  
  <resultMap type="Member" id="MemberResultSet">
  	<result column="MEMBER_NO" property="memberNo"/>
  	<result column="MEMBER_ID" property="memberId"/>
  	<result column="MEMBER_PWD" property="memberPwd"/>
  	<result column="MEMBER_NAME" property="memberName"/>
  	<result column="MEMBER_INTRO" property="memberIntro"/>
  	<result column="MEMBER_NICKNAME" property="memberNickname"/>
  	<result column="EMAIL" property="email"/>
  	<result column="PHONE" property="phone"/>
  	<result column="MEMBER_IMG" property="memberImg"/>
  	<result column="ENROLL_DATE" property="enrollDate"/>
  	<result column="STATUS" property="status"/>
  	<result column="MANAGER_STATUS" property="managerStatus"/>
  	<result column="MENTOR_STATUS" property="mentorStatus"/>
  	<result column="MENTOR_VALID" property="mentorValid"/>
  	<result column="MENTOR_INTRO" property="mentorIntro"/>
  	<result column="CAREER" property="career"/>
  	<result column="LICENSE_NAME" property="symbolLicense"/>
  	<result column="LICENSE_NO" property="symbolLicenseNo"/>
  </resultMap>
  
   <resultMap type="StudyBoard" id="BoardResultSet">
  	<result column="STUDY_BOARD_NO" property="boardNo"/>
  	<result column="STUDY_NO" property="studyNo"/>
  	<result column="STUDY_BOARD_TITLE" property="boardTitle"/>
  	<result column="STUDY_BOARD_CONTENT" property="boardContent"/>
  	<result column="VIEW_COUNT" property="viewCount"/>
  	<result column="STUDY_BOARD_DATE" property="boardDate"/>
	<result column="MANAGER_NO" property="managerNo"/>
  	<result column="MANAGER_NICKNAME" property="managerName"/>
  </resultMap>
  
  <select id="countStudy" resultType="_int">
	SELECT COUNT(*)
	FROM STUDY
  </select>

  <select id="selectStudyList" resultMap="StudyResultSet">
 	 SELECT S.STUDY_NO ,
            M.MEMBER_NICKNAME AS MANAGER_NAME,
		    S.STUDY_NAME ,
		    S.STUDY_IMG ,
		    S.STUDY_RECRUIT,
            COUNT(*) AS MEMBER_COUNT
       FROM STUDY S
    INNER JOIN STUDY_MEMBER SM ON (S.STUDY_NO = SM.STUDY_NO)
    LEFT JOIN MEMBER M ON(M.MEMBER_NO = S.MANAGER_NO)
    <where>
   		<if test="keyword != null">
			AND STUDY_NAME LIKE '%' || #{keyword} || '%'
		</if>
    	<if test="recruit eq 2">
			AND STUDY_RECRUIT = 'Y'
		</if>
			<if test="recruit eq 3">
			AND STUDY_RECRUIT = 'N'
		</if>
    </where>
    GROUP BY S.STUDY_NO, M.MEMBER_NICKNAME, S.STUDY_NAME, S.STUDY_IMG, S.STUDY_RECRUIT
	<choose>
		<when test="sortNo == 2">
			ORDER BY MEMBER_COUNT DESC
	    </when>
	    <otherwise>
	    	ORDER BY STUDY_NO DESC
	    </otherwise>
	</choose>
  </select>
  
  <select id="selectStudy" resultMap="StudyResultSet">
	  	SELECT S.STUDY_NO ,
	            M.MEMBER_NICKNAME AS MANAGER_NAME,
			    S.STUDY_NAME ,
			    S.STUDY_IMG ,
				S.STUDY_INFO,
			    S.STUDY_RECRUIT,
	            M.MEMBER_INTRO AS MANAGER_INTRO,
	            COUNT(*) AS MEMBER_COUNT
	       FROM STUDY S
	    INNER JOIN STUDY_MEMBER SM ON (S.STUDY_NO = SM.STUDY_NO) AND S.STUDY_NO = #{no}
	    LEFT JOIN MEMBER M ON(M.MEMBER_NO = S.MANAGER_NO)
	    GROUP BY S.STUDY_NO, M.MEMBER_NICKNAME, S.STUDY_NAME, S.STUDY_INFO, S.STUDY_IMG, S.STUDY_RECRUIT, 
	        M.MEMBER_INTRO
  </select>
  
  <select id="countStudyMember" resultType="_int">
		SELECT COUNT(*)
		  FROM STUDY_MEMBER
	     WHERE STUDY_NO = #{no}
  </select>
  
  <select id="selectStudyMemberList" resultMap="MemberResultSet">
	SELECT M.MEMBER_NO, 
		   MEMBER_NICKNAME,
		   MEMBER_IMG
	  FROM MEMBER M
INNER JOIN STUDY_MEMBER SM ON(M.MEMBER_NO = SM.MEMBER_NO) AND STUDY_NO = #{no}
	<if test="keyword != null">
		AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%'
	</if>
  </select>
  
  <select id="countBoard" resultType="_int">
	SELECT COUNT(*)
	FROM STUDY_BOARD
	<if test="keyword != null">
		WHERE STUDY_BOARD_TITLE LIKE '%' || #{keyword} || '%'
	</if>
  </select>
  
  <select id="selectBoardList" resultMap="BoardResultSet">
	SELECT STUDY_BOARD_NO ,
		MEMBER_NICKNAME AS MANAGER_NICKNAME ,
		STUDY_BOARD_TITLE ,
		VIEW_COUNT ,
		TO_CHAR(STUDY_BOARD_DATE,'YYYY-MM-DD') AS STUDY_BOARD_DATE
	FROM STUDY_BOARD SB
	INNER JOIN STUDY S ON(SB.STUDY_NO = S.STUDY_NO) AND STATUS ='Y'
	<if test="keyword != null">
		AND STUDY_BOARD_TITLE LIKE '%' || #{keyword} || '%'
	</if>
	INNER JOIN MEMBER M ON(S.MANAGER_NO = M.MEMBER_NO)
	ORDER BY SB.STUDY_BOARD_DATE DESC
  </select>
  
  <update id="increaseView">
	UPDATE STUDY_BOARD
	SET VIEW_COUNT = VIEW_COUNT + 1
	WHERE STUDY_BOARD_NO = #{no}
  </update>
  
  <select id="selectBoard" resultMap="BoardResultSet">
  	SELECT STUDY_BOARD_NO ,
			STUDY_NO ,
			MANAGER_NO,
			STUDY_BOARD_TITLE ,
			STUDY_BOARD_CONTENT ,
			STUDY_RECRUIT
	  FROM STUDY_BOARD
 LEFT JOIN STUDY USING (STUDY_NO)
     WHERE STUDY_BOARD_NO = #{no}
  </select>
  
  <select id="checkStudyManager" resultType="int">
		SELECT 1 
		FROM DUAL 
		WHERE EXISTS(
		    SELECT 1
		    FROM STUDY
		    WHERE MANAGER_NO = #{memberNo}
		)
  </select>
  
  <select id="selectManagerStudy" resultMap="StudyResultSet">
		SELECT STUDY_NO ,
		    STUDY_NAME
		FROM STUDY
		WHERE MANAGER_NO = #{memberNo}
  </select>
  
  <select id="isStudyManager" resultType="int">
		SELECT 1 
		FROM DUAL 
		WHERE EXISTS(
		   SELECT 1
		     FROM STUDY
		    WHERE MANAGER_NO = #{memberNo}
		      AND STUDY_NO = #{studyNo}
		)
  </select>
  
  <insert id="insertBoard" parameterType="StudyBoard">
	  	INSERT INTO STUDY_BOARD(
		    STUDY_BOARD_NO,
		    STUDY_NO,
		    STUDY_BOARD_TITLE,
		    STUDY_BOARD_CONTENT
		)VALUES(
		    STUDY_BOARD_SEQ.NEXTVAL,
		    #{studyNo},
		    #{boardTitle},
		    #{boardContent}
		)
  </insert>
  
   <select id="isWriter" resultType="int">
		SELECT 1 
		  FROM DUAL 
		 WHERE EXISTS(
		   SELECT 1
		     FROM STUDY_BOARD SB
       INNER JOIN STUDY S ON (SB.STUDY_NO = S.STUDY_NO) 
              AND SB.STUDY_BOARD_NO = #{boardNo}
              AND S.MANAGER_NO = #{managerNo}
		)
  </select>
  
  <update id="deleteBoard">
  	  UPDATE STUDY_BOARD
  	     SET STATUS = 'N'
  	   WHERE STUDY_BOARD_NO = #{boardNo}
  </update>
  
   <update id="updateBoard">
  	  UPDATE STUDY_BOARD
  	     SET STUDY_BOARD_TITLE = #{boardTitle},
  	         STUDY_BOARD_CONTENT = #{boardContent}
  	   WHERE STUDY_BOARD_NO = #{boardNo}
  </update>
  

</mapper>

